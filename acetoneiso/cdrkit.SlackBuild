#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }

PRGNAM=cdrkit
VERSION=1.1.11
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) export ARCH=i586 ;;
	arm*) export ARCH=arm ;;
	   *) export ARCH=$( uname -m ) ;;
esac

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/var/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK1=http://ponce.cc/slackware/sources/repo/cdrkit-1.1.11.tar.gz
LINK2=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.10-build-fix.patch
LINK3=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-cmakewarn.patch
LINK4=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-devname.patch
LINK5=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-dvdman.patch
LINK6=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-format.patch
LINK7=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-gcc10.patch
LINK8=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-handler.patch
LINK9=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-manpagefix.patch
LINK10=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-memset.patch
LINK11=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-paranoiacdda.patch
LINK12=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-ppc64le_elfheader.patch
LINK13=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-readsegfault.patch
LINK14=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-rootstat.patch
LINK15=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-sysmacros.patch
LINK16=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-usalinst.patch
LINK17=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-utf8.patch
LINK18=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.11-werror_gcc5.patch
LINK19=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.8-werror.patch
LINK20=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.9-buffer_overflow.patch
LINK21=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.9-efi-boot.patch
LINK22=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.9-no_mp3.patch
LINK23=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/cdrkit/cdrkit-1.1.9-wformat-error.patch

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
else
  SLKCFLAGS="-O2"
fi

set -e
wget -c $LINK1 $LINK2 $LINK3 $LINK4 $LINK5 $LINK6 $LINK7 $LINK8 $LINK9 $LINK10 $LINK11 $LINK12 $LINK13 $LINK14 $LINK15 $LINK16 $LINK17 $LINK18 $LINK19 $LINK20 $LINK21 $LINK22 $LINK23
rm -rf $TMP
mkdir -p $TMP $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

patch -p1 < $CWD/cdrkit-1.1.8-werror.patch
patch -p1 < $CWD/cdrkit-1.1.9-buffer_overflow.patch
patch -p1 < $CWD/cdrkit-1.1.9-efi-boot.patch
patch -p1 < $CWD/cdrkit-1.1.9-no_mp3.patch
patch -p1 < $CWD/cdrkit-1.1.9-wformat-error.patch
patch -p1 < $CWD/cdrkit-1.1.10-build-fix.patch
patch -p1 < $CWD/cdrkit-1.1.11-cmakewarn.patch
patch -p1 < $CWD/cdrkit-1.1.11-devname.patch
patch -p1 < $CWD/cdrkit-1.1.11-dvdman.patch
patch -p1 < $CWD/cdrkit-1.1.11-format.patch
patch -p1 < $CWD/cdrkit-1.1.11-gcc10.patch
patch -p1 < $CWD/cdrkit-1.1.11-handler.patch
patch -p1 < $CWD/cdrkit-1.1.11-manpagefix.patch
patch -p1 < $CWD/cdrkit-1.1.11-memset.patch
patch -p1 < $CWD/cdrkit-1.1.11-ppc64le_elfheader.patch
patch -p1 < $CWD/cdrkit-1.1.11-readsegfault.patch
patch -p1 < $CWD/cdrkit-1.1.11-rootstat.patch
patch -p1 < $CWD/cdrkit-1.1.11-sysmacros.patch
patch -p1 < $CWD/cdrkit-1.1.11-usalinst.patch
patch -p1 < $CWD/cdrkit-1.1.11-utf8.patch
patch -p1 < $CWD/cdrkit-1.1.11-werror_gcc5.patch

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
cmake -DCMAKE_INSTALL_PREFIX=/usr
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make $NUMJOBS; make install DESTDIR=$PKG

( cd $PKG/usr/bin
    ln -s wodim cdrecord
    ln -s icedax cdda2wav
    ln -s genisoimage mkisofs )

( cd 3rd-party/zisofs_tools
  CFLAGS="$SLKCFLAGS" ./configure
  make $NUMJOBS)

mv $PKG/usr/share/man $PKG/usr/man/
rm -fR $PKG/usr/share
install -m 0755 icedax/cdda2mp3 $PKG/usr/bin/cdda2mp3
install -m 0755 3rd-party/zisofs_tools/mkzftree $PKG/usr/bin/mkzftree
install -m 0755 3rd-party/geteltorito/geteltorito.pl $PKG/usr/bin/geteltorito
install -m 0644 3rd-party/zisofs_tools/mkzftree.1 $PKG/usr/man/man1/mkzftree.1
install -m 0644 3rd-party/geteltorito.1 $PKG/usr/man/man1/geteltorito.1
install -m 0644 -D wodim/wodim.dfl $PKG/etc/wodim.conf
install -m 0644 netscsid/netscsid.dfl $PKG/etc/netscsid.conf
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
cp -a ABOUT COPYING Changelog FAQ FORK INSTALL START TODO VERSION doc/* 3rd-party/geteltorito/README.geteltorito $PKG/usr/doc/$PRGNAM-$VERSION
install -m 0644 3rd-party/dirsplit/README $PKG/usr/doc/$PRGNAM-$VERSION/README.dirsplit

echo "      |-----handy-ruler------------------------------------------------------|
cdrkit: cdrkit (Tools for mastering and writing compact discs)
cdrkit:
cdrkit: This is a fork of the last free GPL version of cdrtools.
cdrkit: icedax:       CD audio sampling utility (formerly cdda2wav).
cdrkit: wodim:        burn discs in most ATAPI and SCSI CD-R drives
cdrkit: (formerly cdrecord).
cdrkit: genisoimage:  create ISO9660/HFS/Joliet CD-ROM images
cdrkit: (formerly mkisofs).
cdrkit:
cdrkit: homepage: http://www.cdrkit.org/
cdrkit:" > $PKG/install/slack-desc

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote j√° pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
