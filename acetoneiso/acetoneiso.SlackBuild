#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/cdrkit*  2>&-)" ] && { echo -e "\nDependência Faltante: cdrkit !     \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/fuseiso* 2>&-)" ] && { echo -e "\nDependência Faltante: fuseiso !    \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/p7zip*   2>&-)" ] && { echo -e "\nDependência Faltante: p7zip !      \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/rar*     2>&-)" ] && { echo -e "\nDependência Faltante: rar (unrar) !\n"; ERRO=1; }
[ "$ERRO" = 1 ] && exit 1

PRGNAM=acetoneiso
VERSION=2.4
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) export ARCH=i586 ;;
	arm*) export ARCH=arm ;;
	   *) export ARCH=$( uname -m ) ;;
esac

mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM 

CWD=$PWD
TMP=/var/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK1=https://launchpad.net/ubuntu/+archive/primary/+files/acetoneiso_2.4.orig.tar.gz
LINK2=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/acetoneiso/PKGS/acetoneiso/acetoneiso-2.4-qt5.patch
LINK3=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/acetoneiso/PKGS/acetoneiso/acetoneiso-2.4-qttranslations.patch

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK1 $LINK2 $LINK3
rm -rf $TMP
mkdir -p $PKG/{install,usr/{doc/$PRGNAM-$VERSION,bin,share/{acetoneiso,applications,pixmaps}}}
cd $TMP; tar xvf $CWD/${PRGNAM}_${VERSION}.orig.tar.gz
mv ${PRGNAM}${VERSION} $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

patch -p1 -i $CWD/acetoneiso-2.4-qt5.patch
patch -p1 -i $CWD/acetoneiso-2.4-qttranslations.patch

cd $PRGNAM/sources
	sed -i 's#<Phonon/#<phonon/#' erase_cd.cpp erase_dvd.cpp burn_iso_2_cd.cpp burn_iso_2_dvd.cpp
cd ..

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
/usr/bin/qmake-qt5 -o Makefile acetoneiso.pro
make $NUMJOBS; make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
install -D -m755 acetoneiso $PKG/usr/share/acetoneiso/acetoneiso
cp -a {images,locale,manual,ui} $PKG/usr/share/acetoneiso
install -D -m644 menu/AcetoneISO.desktop $PKG/usr/share/applications/AcetoneISO.desktop
install -D -m644 images/Acetino2.png $PKG/usr/share/pixmaps/Acetino2.png
cd ..; cp -a AUTHORS CHANGELOG FEATURES LICENSE README TODO $PKG/usr/doc/$PRGNAM-$VERSION
ln -s /usr/bin/unrar $PKG/usr/bin/unrar-nonfree

echo "#!/bin/sh
cd /usr/share/acetoneiso
exec /usr/share/acetoneiso/acetoneiso" $PKG/usr/bin/acetoneiso

echo "          |-----handy-ruler------------------------------------------------------|
acetoneiso: acetoneiso (CD/DVD image manipulator for GNU/Linux)
acetoneiso:
acetoneiso: AcetoneISO is a feature-rich and complete software application to
acetoneiso: manage CD/DVD images. AcetoneISO will let You mount typical
acetoneiso: proprietary images formats of the Windows world such as ISO BIN NRG
acetoneiso: MDF IMG and do plenty of other things.
acetoneiso:
acetoneiso: Home page: https://launchpad.net/acetoneiso
acetoneiso:
acetoneiso:
acetoneiso:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
