#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/imlib2* 2>&-)" ] && { echo -e "\nDependência Faltante: imlib2 !\n"; exit 1; }

PRGNAM=conky
VERSION=1.17.0
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) ARCH=i586 ;;
	arm*) ARCH=arm ;;
	   *) ARCH=$( uname -m ) ;;
esac

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/var/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/brndnmtthws/conky/archive/v1.17.0/conky-1.17.0.tar.gz

AUDACIOUS=${AUDACIOUS:-"no"}
NVIDIA=${NVIDIA:-"no"}

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

[ "${AUDACIOUS:-yes}" = "yes" ] && audacious="ON" || audacious="OFF"
[ "${NVIDIA:-yes}" = "yes" ] && nvidia="ON" || nvidia="OFF"

set -e
wget -c $LINK
rm -rf $TMP
mkdir -p $TMP $PKG/{install,usr/doc/$PRGNAM-$VERSION,etc/conky}
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
cmake \
    -B build \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DDOC_PATH=/usr/doc/$PRGNAM-$VERSION \
    -DMAINTAINER_MODE=ON \
    -DBUILD_DOCS=OFF \
    -DBUILD_EXTRAS=ON \
    -DBUILD_XDBE=ON \
    -DBUILD_AUDACIOUS=$audacious \
    -DBUILD_NVIDIA=$nvidia \
    -DBUILD_CURL=ON \
    -DBUILD_WLAN=ON \
    -DBUILD_RSS=ON \
    -DBUILD_PULSEAUDIO=ON \
    -DBUILD_MPD=ON \
    -DBUILD_IMLIB2=ON \
    -DBUILD_LUA_CAIRO=ON \
    -DBUILD_LUA_IMLIB2=ON \
    -DCMAKE_BUILD_TYPE=Release .

make $NUMJOBS -C build
make -C build DESTDIR=$PKG install

find $PKG -type f -iname '*.a' -exec rm -rf {} \+
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

cp data/conky.conf $PKG/etc/conky/conky.conf.new
cp data/conky_no_x11.conf $PKG/etc/conky/conky_no_x11.conf.new

mkdir -p $PKG/usr/share/nano
mkdir -p $PKG/usr/share/vim/vimfiles/{syntax,ftdetect}
cp build/extras/vim/syntax/conkyrc.vim $PKG/usr/share/vim/vimfiles/syntax
cp extras/vim/ftdetect/conkyrc.vim $PKG/usr/share/vim/vimfiles/ftdetect

cp build/extras/nano/conky.nanorc $PKG/usr/share/nano/conky.nanorc
cp -a AUTHORS COPYING LICENSE.BSD README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat extras/convert.lua > $PKG/usr/doc/$PRGNAM-$VERSION/convert.lua
rm -r $PKG/usr/doc/$PRGNAM-$VERSION/*.conf


echo '     |-----handy-ruler------------------------------------------------------|
conky: conky (light-weight system monitor for X)
conky:
conky: Conky is a system monitor for X originally based on the torsmo code.
conky: Since its original conception, Conky has changed a fair bit from
conky: its predecessor.  Conky can display just about anything, either on
conky: your root desktop or in its own window.  Conky has many built-in
conky: objects, as well as the ability to execute programs and scripts, then
conky: display the output from stdout.
conky:
conky: Homepage: http://conky.sourceforge.net
conky:' > $PKG/install/slack-desc

echo 'config() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  # If there is no config file by that name, mv it over:
  if [ ! -r $OLD ]; then
    mv $NEW $OLD
  elif [ "$(cat $OLD|md5sum)" = "$(cat $NEW|md5sum)" ]; then
    # toss the redundant copy
    rm $NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
config etc/conky/conky.conf.new
config etc/conky/conky_no_x11.conf.new' > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
