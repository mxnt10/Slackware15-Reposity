#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }

PRGNAM=unetbootin
VERSION=702
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/unetbootin/unetbootin/releases/download/702/unetbootin-source-702.tar.gz

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK
rm -rf $TMP
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; mkdir $PRGNAM-$VERSION; cd $PRGNAM-$VERSION; tar xvf $CWD/$PRGNAM*-$VERSION.tar.?z*
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

chmod 644 *.png *.svg *.desktop

lupdate-qt5 unetbootin.pro
lrelease-qt5 unetbootin.pro
qmake-qt5 -config release "DEFINES += NOSTATIC" "RESOURCES -= unetbootin.qrc"
make
strip --strip-unneeded $PRGNAM

mkdir -p $PKG/usr/bin
cp -a $PRGNAM $PKG/usr/bin/$PRGNAM
cp -a unetbootin_asroot $PKG/usr/bin/
chmod 755 $PKG/usr/bin/unetbootin_asroot

sed -i -e '/^Cat/s,Application;,,' \
       -e '/^GenericName/s,\[en_US\],,' \
       $PRGNAM.desktop
mkdir -p $PKG/usr/share/applications
cp -a $PRGNAM.desktop  $PKG/usr/share/applications/$PRGNAM.desktop

mkdir -p $PKG/usr/share/$PRGNAM
for file in ${PRGNAM}*.qm; do
 	cp -a ${file} $PKG/usr/share/$PRGNAM/
done
for file in ${PRGNAM}*.png; do
 	size="${file/${PRGNAM}_}"
 	size="${size/.png}x${size/.png}"
 	mkdir -p $PKG/usr/share/icons/hicolor/${size}/apps
 	cp -a ${file} $PKG/usr/share/icons/hicolor/${size}/apps/$(echo $file | tr -d _$size)
done

mkdir -p $PKG/usr/share/icons/hicolor/scalable/apps/
cp -a unetbootin_icons.svg $PKG/usr/share/icons/hicolor/scalable/apps/$PRGNAM.svg

mkdir -p $PKG/usr/share/pixmaps/
cp -a unetbootin_icons.svg $PKG/usr/share/pixmaps/$PRGNAM.svg

cp -a README.TXT $PKG/usr/doc/$PRGNAM-$VERSION

echo "          |-----handy-ruler------------------------------------------------------|
unetbootin: unetbootin (create bootable Live USB drives)
unetbootin:
unetbootin: UNetbootin lets you create bootable live usb drives for Linux
unetbootin: distributions without burning a CD.
unetbootin:
unetbootin: Homepage: https://unetbootin.github.io
unetbootin:
unetbootin:
unetbootin:
unetbootin:
unetbootin:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote jรก pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
