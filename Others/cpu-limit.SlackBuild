#!/bin/sh
# Software

# Slackware build script for cpu-limit

# Copyright 2022 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/zenity* 2>&-)" ] && { echo -e "\nDependência Faltante: zenity !\n"; exit 1; }

PRGNAM=cpu-limit
VERSION=1.1
ARCH=noarch
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM 

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/mxnt10/cpu-limit/archive/refs/tags/v1.1.tar.gz

set -e
wget -c -O $PRGNAM-$VERSION.tar.gz $LINK
rm -rf $PKG $TMP/$PRGNAM-$VERSION*
mkdir -p $PKG/install
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION*
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

install_root=$PKG ./install.sh

echo "         |-----handy-ruler------------------------------------------------------|
cpu-limit: cpu-limit (CPU Frequency Limit Tool)
cpu-limit:
cpu-limit: CPU Frequency Limit Tool Fork from the
cpu-limit: GameLinux Youtube channel for Slackware.
cpu-limit:
cpu-limit: https://github.com/mxnt10/cpu-limit
cpu-limit:
cpu-limit:
cpu-limit:
cpu-limit:
cpu-limit:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$PRGNAM-$VERSION*

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
