#!/bin/sh

# Slackware build script for protonvpn-gui

# Copyright 2021 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/python3-ConfigParser* 2>&-)" ] && { echo -e "\nDependência Faltante: python3-ConfigParser !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/protonvpn-cli*        2>&-)" ] && { echo -e "\nDependência Faltante: protonvpn-cli !       \n"; ERRO=1; }
[ "$ERRO" = 1 ] && exit 1

PRGNAM=protonvpn-gui
SRCNAM=linux-gui
VERSION=2.1.1
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) ARCH=i586 ;;
	arm*) ARCH=arm ;;
	   *) ARCH=$( uname -m ) ;;
esac

WD=$PWD; mkdir -p $PRGNAM; chown -R 1000:users $PRGNAM; cd $PRGNAM

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/ProtonVPN/linux-gui/archive/refs/tags/v2.1.1.tar.gz

set -e
wget -c -O $SRCNAM-$VERSION.tar.gz $LINK
rm -rf $PKG $TMP/$SRCNAM-$VERSION
mkdir -p $PKG/{install,usr/{doc/$PRGNAM-$VERSION,share/{applications,pixmaps}}}
cd $TMP; tar xvf $CWD/$SRCNAM-$VERSION.tar.?z*
cd $SRCNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

python3 setup.py install --optimize=1 --root=$PKG

cp -T linux_gui/resources/img/logo/protonvpn_logo.png $PKG/usr/share/pixmaps/protonvpn.png
cp -a *.md LICENSE $PKG/usr/doc/$PRGNAM-$VERSION

echo '[Desktop Entry]
Name=ProtonVPN
GenericName=ProtonVPN GUI
Exec=protonvpn-gui
Icon=protonvpn
Type=Application
Terminal=False
Categories=Utility;GUI;Network;VPN' > $PKG/usr/share/applications/$PRGNAM.desktop

echo '[Desktop Entry]
Name=ProtonVPN Tray
GenericName=ProtonVPN Tray
Exec=protonvpn-tray
Icon=protonvpn
Type=Application
Terminal=False
Categories=Utility;GUI;Network;VPN' > $PKG/usr/share/applications/protonvpn-tray.desktop

echo '             |-----handy-ruler------------------------------------------------------|
protonvpn-gui: protonvpn-gui (ProtonVPN is Linux GUI Interface)
protonvpn-gui:
protonvpn-gui: The linux-gui works on top of linux-cli, making it a dependency.
protonvpn-gui: All local configurations are managed by the GUI (such as updating
protonvpn-gui: protocol, split tunneling, manage killswitch) while the
protonvpn-gui: connections are managed by the CLI. This way, you will be able
protonvpn-gui: to use the latest version of the CLI, while also being able
protonvpn-gui: to use the GUI.
protonvpn-gui:
protonvpn-gui: Homepage: https://protonvpn.com/support/linux-vpn-tool/
protonvpn-gui:' > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$SRCNAM-$VERSION

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	[ -e "../Exclamation.mp3" ] && pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY mplayer $WD/Exclamation.mp3 > /dev/null
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
