#!/bin/sh

# Slackware build script for spotify

# Copyright 2021 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && echo -e "\nExecute como Root !\n" && exit 1
[ "`uname -m`" != x86_64 ] && { echo -e "\n Not Support !\n"; exit 1; }

PRGNAM=spotify
SRCNAM=spotify-client
VERSION=1.1.56.595
DEBARCH=g2d2da0de_amd64
ARCH=x86_64
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

WD=$PWD; mkdir -p $PRGNAM; chown -R 1000:users $PRGNAM; cd $PRGNAM

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK=http://repository.spotify.com/pool/non-free/s/spotify-client/spotify-client_1.1.56.595.g2d2da0de_amd64.deb

set -e
wget -c $LINK
rm -rf $PKG
mkdir -p $PKG/{install,usr/{share/{applications,$PRGNAM/lib},doc/$PRGNAM-$VERSION}}
cd $PKG; ar -p $CWD/${SRCNAM}_${VERSION}.${DEBARCH}.deb data.tar.gz | tar zxv
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .
rm $PKG/usr/bin/$PRGNAM

echo "#!/bin/sh
export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/usr/share/$PRGNAM/lib
/usr/share/$PRGNAM/$PRGNAM \"\$@\"" > $PKG/usr/bin/$PRGNAM

chmod 755 $PKG/usr/bin/$PRGNAM

( cd $PKG/usr/share/$PRGNAM/icons
  for IMG in $PRGNAM-linux-*.png; do
    SIZE=${IMG##*$PRGNAM-linux-}
    DIRNAME=${SIZE%.png}x${SIZE%.png}
    install -D $IMG $PKG/usr/share/icons/hicolor/$DIRNAME/apps/$SRCNAM.png
  done )

mv $PKG/usr/share/$PRGNAM/$PRGNAM.desktop $PKG/usr/share/applications/$SRCNAM.desktop
mv $PKG/usr/share/doc/$SRCNAM/* $PKG/usr/doc/$PRGNAM-$VERSION
rm -rf $PKG/usr/share/doc/$SRCNAM

echo "       |-----handy-ruler------------------------------------------------------|
spotify: spotify (digital music client)
spotify:
spotify: Spotify is a digital music service that gives you
spotify: access to millions of songs.
spotify:
spotify: https://www.spotify.com
spotify:
spotify:
spotify:
spotify:
spotify:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi

ln -s /usr/lib64/libcurl.so.4.7.0 /usr/share/spotify/lib/libcurl-gnutls.so.4" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	[ -e "../Exclamation.mp3" ] && pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY mplayer $WD/Exclamation.mp3 > /dev/null
	read $TIME -p "O pacote jรก pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
