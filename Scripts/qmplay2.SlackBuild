#!/bin/sh

# Slackware build script for QMPlay2

# Copyright 2021 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/libass*       2>&-)" ] && { echo -e "\nDependência Faltante: libass !      \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/libgme*       2>&-)" ] && { echo -e "\nDependência Faltante: libgme !      \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/libsidplayfp* 2>&-)" ] && { echo -e "\nDependência Faltante: libsidplayfp !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/portaudio*    2>&-)" ] && { echo -e "\nDependência Faltante: portaudio !   \n"; ERRO=1; }
[ "$ERRO" = 1 ] && exit 1

PRGNAM=QMPlay2
VERSION=21.06.07
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) ARCH=i586 ;;
	arm*) ARCH=arm ;;
	   *) ARCH=$( uname -m ) ;;
esac

WD=$PWD; mkdir -p $PRGNAM; chown -R 1000:users $PRGNAM; cd $PRGNAM 

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/zaps166/QMPlay2/releases/download/21.06.07/QMPlay2-src-21.06.07.tar.xz

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; tar xvf $CWD/$PRGNAM-src-$VERSION.tar.?z
cd $PRGNAM-src-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

cmake \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_LIBDIR=lib${LIBDIRSUFFIX} \
  -DUSE_CHIPTUNE_SID=ON \
  -DUSE_LINK_TIME_OPTIMIZATION=OFF \
  -DUSE_PCH=ON \
  -DUSE_GLSLC=OFF \
  -DUSE_GIT_VERSION=OFF .
make -j8; make -j8 install/strip DESTDIR=$PKG

mv $PKG/usr/share/man $PKG/usr/man
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
cp AUTHORS ChangeLog LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION

echo "       |-----handy-ruler------------------------------------------------------|
QMPlay2: QMPlay2 (video/audio player)
QMPlay2:
QMPlay2: QMPlay2 is a video and audio player. It can play all formats supported
QMPlay2: by FFmpeg, libmodplug (including J2B and SFX). It also supports Audio
QMPlay2: CD, raw files, Rayman 2 music and chiptunes. It contains YouTube and
QMPlay2: Prostopleer browser.
QMPlay2:
QMPlay2: Home page: https://github.com/zaps166/QMPlay2
QMPlay2:
QMPlay2:
QMPlay2:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$PRGNAM-src-$VERSION

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	[ -e "../Exclamation.mp3" ] && pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY mplayer $WD/Exclamation.mp3 > /dev/null
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
