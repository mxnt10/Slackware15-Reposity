#!/bin/sh

# Slackware build script for mpv

# Copyright 2021 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && echo -e "\nExecute como Root !\n" && exit 1
[ ! "`ls /var/log/packages/libplacebo* 2>&-`" ] && echo -e "\nDependência Faltante: libplacebo ! \n" && ERRO=1
[ ! "`ls /var/log/packages/lua*        2>&-`" ] && echo -e "\nDependência Faltante: lua !        \n" && ERRO=1
[ ! "`ls /var/log/packages/mujs*       2>&-`" ] && echo -e "\nDependência Faltante: mujs !       \n" && ERRO=1
[ "$ERRO" = 1 ] && exit 1

PRGNAM=mpv
VERSION=0.33.1
WAF_VERSION=2.0.22
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) ARCH=i586 ;;
	arm*) ARCH=arm ;;
	   *) ARCH=$( uname -m ) ;;
esac

WD=$PWD; mkdir -p $PRGNAM; chown -R 1000:users $PRGNAM; cd $PRGNAM

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK1=https://github.com/mpv-player/mpv/archive/v0.33.1/mpv-0.33.1.tar.gz
LINK2=https://waf.io/waf-2.0.22

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK1 $LINK2
rm -rf $PKG $TMP/$PRGNAM-$VERSION
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION/manual}
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z
cd $PRGNAM-$VERSION
cp $CWD/waf-$WAF_VERSION ./waf
sed -i -e 's/python$/python3/' waf
chmod +x waf
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

MANUAL="DOCS/*.md DOCS/*.rst DOCS/*.txt"
BUILD_OPTS=${BUILD_OPTS:-""}
PKG_CONFIG_PATH="/usr/lib${LIBDIRSUFFIX}/ffmpeg4/pkgconfig"
export PKG_CONFIG_PATH
./waf configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --confdir=/etc/$PRGNAM \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --enable-libmpv-shared \
  --enable-html-build \
  --enable-dvdnav \
  --enable-cdda \
  --enable-dvbin \
  $BUILD_OPTS
./waf build
./waf --destdir=$PKG install

for f in $PKG/etc/mpv/*.conf ; do mv $f{,.new}; done
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz; rm $i; done
cp -a Copyright LICENSE.{,L}GPL README.md RELEASE_NOTES VERSION $PKG/usr/doc/$PRGNAM-$VERSION
for f in "DOCS/*.md DOCS/*.rst DOCS/*.txt"; do cp -a $f $PKG/usr/doc/$PRGNAM-$VERSION/manual; done

echo '   |-----handy-ruler------------------------------------------------------|
mpv: mpv (a movie player based on MPlayer and mplayer2)
mpv:
mpv: mpv is a fork of mplayer2 and MPlayer. It shares some features with
mpv: the former projects while introducing many more. It supports a wide
mpv: variety of video file formats, audio and video codecs, and subtitle
mpv: types.
mpv:
mpv:
mpv:
mpv: mpv homepage: http://mpv.io/
mpv:' > $PKG/install/slack-desc

echo 'config() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  # If there is no config file by that name, mv it over:
  if [ ! -r $OLD ]; then
    mv $NEW $OLD
  elif [ "$(cat $OLD | md5sum)" = "$(cat $NEW | md5sum)" ]; then
    # toss the redundant copy
    rm $NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}

preserve_perms() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  if [ -e $OLD ]; then
    cp -a $OLD ${NEW}.incoming
    cat $NEW > ${NEW}.incoming
    mv ${NEW}.incoming $NEW
  fi
  config $NEW
}

for f in etc/mpv/*.conf.new ; do
  preserve_perms $f
done

if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache -f usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi' > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$PRGNAM-$VERSION

cd $CWD
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	[ -e "../Exclamation.mp3" ] && pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY mplayer $WD/Exclamation.mp3 > /dev/null
	read -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
