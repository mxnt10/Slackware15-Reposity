#!/bin/bash

################################################################################
#                                                                              #
#                                                                              #
# Build Get 2.0 - Instalação de Pacotes para o Slackware 15.0                  #
#                                                                              #
# By Mauricio Ferrari                                                          #
#                                                                              #
#                                                                              #
# Descrição:                                                                   #
#                                                                              #
# Esse software tem como objetivo facilitar o download e a instalação de       #
# pacotes no Slackware 15.0 através de scripts semelhantes ao SlackBuilds.     #
#                                                                              #
#                                                                              #
# Comandos:                                                                    #
#                                                                              #
# update  - Atualiza a Base de Dados.                                          #
# list    - Lista os Programas da Base de Dados.                               # 
# build   - Gera o Pacote do Programa.                                         #
# install - Gera e Instala o Pacote do Programa.                               #
#                                                                              #
#                                                                              #
#                            ### Copyright 2021 ###                            #
#                                                                              #
#                                                                              #
################################################################################

################################################################################

# ### Definições ###

################################################################################

PARAM=$1
PACKAGE=$2
CWD=${PWD}
BUILDDIR="/var/build-get"
BUILDSCR="$BUILDDIR/packages"
BUILDNAME="PACKAGES.TXT"
BUILDLIST="$BUILDDIR/$BUILDNAME"
BUILDLINK="https://raw.githubusercontent.com/MauricioFerrari-NovaTrento/Slackware15-Reposity/master/Scripts"
BUILDURL="$BUILDLINK/$BUILDNAME"

################################################################################

# ### Info Function ###

################################################################################

info()
{
	head -29 $( realpath $0 ) | sed "1d"
	exit 0
}

################################################################################

# ### Checagens ###

################################################################################

concluido()
{
	echo -e "\nConcluído !\n"
	exit 0
}

checkroot()
{
	[ "$UID" != "0" ] && echo -e "\nAlgumas Operações Requerem Root !\n" && exit 1
}

checkstart()
{
	[ ! -e "$BUILDLIST" ] && echo -e "\nArquivo $BUILDLIST não Encontrado! Resolvendo..." && updatelist
}

checkbuild()
{
	# Alguns pacotes podem ser gerados com letras maiúsculas.
	# Portanto, foi usado grep com "-i".
	CKBUILD=$( ls -R $BUILDSCR 2>/dev/null | egrep -iE "([$PACKAGE][-]([0-9]*[.,_]([a-z]*[0-9])*)*[0-9]*[-][a-z]*([0-9]*)*[_]*([0-9]*)*)" )
	if [ "$CKBUILD" != "" ]; then
		echo -ne "\nJá foi Gerado uma Versão desse Pacote: $CKBUILD !\nManter o Pacote(yes/no)? (default: yes): "
		read OPTION
		[ "$OPTION" == "no" ] && build

		# Se executado o "install" o processo não pode parar por aqui.
		[ "$PARAM" == "build" ] && echo -e "\nSaindo ...\n" && exit 0
	else
		build
	fi
}

checkinstall()
{
	# Alguns pacotes podem ser nomeados com letras maiúsculas.
	# Portanto, foi usado grep com "-i".
	CKINSTALL=$( ls /var/log/packages 2>/dev/null | grep -iE ^$PACKAGE-[0-9] )
	if [ "$CKINSTALL" != "" ]; then
		echo -ne "\nJá há uma Versão desse Pacote Instalado: $CKINSTALL !\nContinuar(yes/no)? (default: yes): "
		read OPTION
		[ "$OPTION" == "no" ] && echo -e "\nSaindo ...\n" && exit 0

		# Não é necessário a opção de yes.
		# Com um simples "Enter", o progresso irá continuar.
	fi
}

################################################################################

# ### Função Atualizar Base de Dados ###

################################################################################

updatelist()
{
	checkroot
	echo -e "\nAtualizando a Base de Dados...\n"
	BAK=$BUILDLIST-BAK
	[ ! -e "$BUILDDIR"  ] && mkdir -p $BUILDDIR
	[   -e "$BUILDLIST" ] && mv $BUILDLIST $BAK
	wget -cq --show-progress -O $BUILDLIST $BUILDURL
	CKBYTE=$( wc -c $BUILDLIST | awk '{print $1}' )
	[ "$CKBYTE" == "0" ] && [ ! -e "$BAK" ] && rm -f $BUILDLIST
	[ "$CKBYTE" == "0" ] && [   -e "$BAK" ] && mv $BAK $BUILDLIST
	[ "$CKBYTE" == "0" ] && echo -e "\nFalha ao Atualizar a Base de Dados !\n" && exit 1
	
	# Se o download da base de dados for bem sucedida, o backup não será mais útil.
	[   -e "$BUILDLIST" ] && rm -f $BAK
	
	# Se o checkstart entrou em ação, o processo não pode parar por aqui.
	[ "$PARAM" == "update" ] && concluido
}

################################################################################

# ### Função Listar Programas ###

################################################################################

list()
{
	echo -e "\nListando...\n"
	for ((L=0; L<56; L++)); do printf "-"; done
	printf "\n%5sNº | Pacotes%17s | Versão%10s |\n"
	for ((L=0; L<56; L++)); do printf "-"; done; echo
	[ "$PACKAGE" == "" ] && cat $BUILDLIST | nl | sed -r 's/^ / |/'
	[ "$PACKAGE" != "" ] && grep $PACKAGE $BUILDLIST | nl | sed -r 's/^ / |/'
	for ((L=0; L<56; L++)); do printf "-"; done; echo
	concluido
}

################################################################################

# ### Função Gerar Pacotes ###

################################################################################

build()
{
	echo -e "\nGerando o Pacote do Programa...\n"
	[ "$PACKAGE" == "" ] && echo -e "Parâmetro Incompleto. Não há um Programa a ser Instalado !\n" && exit 1
	[ ! -e $BUILDSCR ] && mkdir $BUILDSCR; cd $BUILDSCR

	# Alguns pacotes podem ser gerados com letras maiúsculas.
	# Portanto, foi usado grep com "-i".
	DOWN=$( grep -wio $PACKAGE $BUILDLIST )
	[ "$DOWN" == "" ] && echo -e "Não foi Possível Encontrar o Pacote $PACKAGE na Lista!\n" && exit 1
	wget -cq --show-progress -P $BUILDSCR $BUILDLINK/$PACKAGE.SlackBuild
	chmod +x $BUILDSCR/$PACKAGE.SlackBuild
	$BUILDSCR/$PACKAGE.SlackBuild

	# Se executado o "install" o processo não pode parar por aqui.
	[ "$PARAM" == "build" ] && concluido
}

################################################################################

# ### Função Instalar ###

################################################################################

installer()
{
	echo -e "\nIniciando o Processo de instalação...\n"
	checkbuild

	# Alguns pacotes podem ser gerados com letras maiúsculas.
	# Portanto, foi usado grep com "-i".
	PRGNAM=$( ls -R $BUILDSCR 2>/dev/null | egrep -iE "([$PACKAGE][-]([0-9]*[.,_]([a-z]*[0-9])*)*[0-9]*[-][a-z]*([0-9]*)*[_]*([0-9]*)*)" )
	/sbin/upgradepkg --install-new $BUILDSCR/$PACKAGE/$PRGNAM
	concluido
}

################################################################################

# ### main ###

################################################################################

[ "$PARAM" == ""       ] && info
[ "$PARAM" == "update" ] && updatelist

# Com isso, não há a necessidade de rodar o update da primeira inicialização.
checkstart

[ "$PARAM" == "list"    ] && list

checkroot
checkinstall # Não precisa instalar os pacotes já instalados no sistema.

[ "$PARAM" == "build"   ] && checkbuild
[ "$PARAM" == "install" ] && installer
