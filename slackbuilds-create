#!/bin/bash
#
# ### SlackBuilds Create - Mauricio Ferrari ###
#
###############################################

NAME=Appname

[ "$3" ] && { 
	echo -e "\n\e[31mMuitos Argumentos!\e[m\n" >&2
	exit 1
}

for P in $*
{
	[ "$(egrep -v "(^-)" <<< $P)" ] && NAME=$( head -1 <(grep -v "^-" <(tr ' ' '\n' <<< $*)))
}

[ -e "/usr/bin/ccat" ] && VIEW=ccat || VIEW=less
[ "$(egrep -w "(-1)" <<< $*)" ] && EXPORT=1 || EXPORT=0

DELM=$(printf "%${#NAME}s" " ")

for (( I=0; I<60; I++ )); { echo; }
clear

slack_sample()
{
echo -e "#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ \$UID != 0 ] && { echo -e \"\\\\nExecute como Root !\\\\n\"; exit 1; }
[ \"\`uname -m\`\" != x86_64 ] && { echo -e \"\\\\n Not Support !\\\\n\"; exit 1; }
[ ! \"\$(ls /var/log/packages/dependencia* 2>&-)\" ] && { echo -e \"\\\\nDependência Faltante: dependencia !\\\\n\"; exit 1; }
[ ! \"\$(ls /var/log/packages/dependencia* 2>&-)\" ] && { echo -e \"\\\\nDependência Faltante: dependencia !\\\\n\"; ERRO=1; }
[ \"\$ERRO\" = 1 ] && exit 1

PRGNAM=$NAME
SRCNAM=$NAME
VERSION=1.0
ARCH=noarch
BUILD=\${BUILD:-1}
TAG=\${TAG:-_mxnt}

if [ -z \"\$ARCH\" ]; then
  case \"\$( uname -m )\" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=\$( uname -m ) ;;
  esac
fi

[ -e \"../../_PKGS\" ] && { mkdir -p ../../_PKGS/\$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/\$PRGNAM; } || {
    mkdir -p PKGS/\$PRGNAM; chown -R 1000:users PKGS; cd PKGS/\$PRGNAM
}

CWD=\$PWD
TMP=/tmp/MXNT
PKG=\$TMP/package-\$PRGNAM
LINK=

if [ \"\$ARCH\" = \"i586\" ]; then
	SLKCFLAGS=\"-O2 -march=i586 -mtune=i686\"
	LIBDIRSUFFIX=\"\"
elif [ \"\$ARCH\" = \"i686\" ]; then
	SLKCFLAGS=\"-O2 -march=i686 -mtune=i686\"
	LIBDIRSUFFIX=\"\"
elif [ \"\$ARCH\" = \"aarch64\" ]; then
	SLKCFLAGS=\"-O2\"
	LIBDIRSUFFIX=\"64\"
elif [ \"\$ARCH\" = \"x86_64\" ]; then
	SLKCFLAGS=\"-O2 -fPIC\"
	LIBDIRSUFFIX=\"64\"
else
	SLKCFLAGS=\"-O2\"
	LIBDIRSUFFIX=\"\"
fi

set -e
wget -c \$LINK
rm -rf \$TMP
mkdir -p \$PKG/{install,usr/doc/\$PRGNAM-\$VERSION}
cd \$PKG; ar p \$CWD/\${PRGNAM}_\${VERSION}_amd64.deb data.tar.xz | tar xJv
cd \$TMP; tar xvf \$CWD/\$PRGNAM-\$VERSION.tar.?z*
cd \$PRGNAM-\$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

NUMJOBS=\${NUMJOBS:-\" -j\$(expr \$(nproc) + 1) \"}

python3 setup.py install --root=\$PKG

perl Makefile.PL \\\\
  PREFIX=/usr \\\\
  INSTALLDIRS=vendor \\\\
  INSTALLVENDORMAN1DIR=/usr/man/man1 \\\\
  INSTALLVENDORMAN3DIR=/usr/man/man3

cmake \\\\
  -DCMAKE_C_FLAGS:STRING=\"\$SLKCFLAGS\" \\\\
  -DCMAKE_CXX_FLAGS:STRING=\"\$SLKCFLAGS\" \\\\
  -DCMAKE_INSTALL_PREFIX=/usr \\\\
  -DLIB_SUFFIX=\${LIBDIRSUFFIX} \\\\
  -DMAN_INSTALL_DIR=/usr/man \\\\
  -DCMAKE_BUILD_TYPE=Release .

CFLAGS=\"\$SLKCFLAGS\" \\\\
CXXFLAGS=\"\$SLKCFLAGS\" \\\\
./configure \\\\
  --prefix=/usr \\\\
  --libdir=/usr/lib\${LIBDIRSUFFIX} \\\\
  --sysconfdir=/etc \\\\
  --localstatedir=/var \\\\
  --mandir=/usr/man \\\\
  --docdir=/usr/doc/\$PRGNAM-\$VERSION \\\\
  --disable-static \\\\
  --build=\$ARCH-slackware-linux
make \$NUMJOBS; make install-strip DESTDIR=\$PKG

find \$PKG -print0 | xargs -0 file | grep -e \"executable\" -e \"shared object\" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find \$PKG/usr/man -type f -exec gzip -9 {} \;
for i in \$( find \$PKG/usr/man -type l ) ; do ln -s \$( readlink \$i ).gz \$i.gz ; rm \$i ; done

echo \"$DELM|-----handy-ruler------------------------------------------------------|
$NAME: $NAME ()
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:
$NAME:\" > \$PKG/install/slack-desc

echo \"if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi\" > \$PKG/install/doinst.sh

cd \$PKG; /sbin/makepkg -l y -c n \$CWD/\$PRGNAM-\$VERSION-\$ARCH-\$BUILD\$TAG.txz
chown -R 1000:users \$CWD/\$PRGNAM-\$VERSION-\$ARCH-\$BUILD\$TAG.txz
rm -rf \$TMP

cd \$CWD
[ \${TIME:-0} != 0 ] && TIME=\"-t \$TIME\" || TIME=
if [ \"\${INST:-no}\" = \"yes\" ]; then
	OPTION=y
else
	read \$TIME -p \"O pacote já pode ser instalado? (y/n) (default=n)\" OPTION
fi
case \"\$OPTION\" in
	y|Y) /sbin/upgradepkg --install-new --reinstall \$PRGNAM-\$VERSION-\$ARCH-\$BUILD\$TAG.txz ;;
esac; exit 0"
} 

[ "$EXPORT" = 0 ] && $VIEW <<< $(slack_sample)
[ "$EXPORT" = 1 ] && $VIEW <<< $(slack_sample) > $NAME.SlackBuild

exit 0
