#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/jack* 2>&-)" ] && { echo -e "\nDependência Faltante: jack2 !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/onevpl* 2>&-)" ] && { echo -e "\nDependência Faltante: onevpl !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/libfdk-aac* 2>&-)" ] && { echo -e "\nDependência Faltante: libfdk-aac !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/mbedtls* 2>&-)" ] && { echo -e "\nDependência Faltante: mbedtls !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/vlc* 2>&-)" ] && { echo -e "\nDependência Faltante: vlc !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/x264* 2>&-)" ] && { echo -e "\nDependência Faltante: x264 !\n"; ERRO=1; }
[ ! "$(ls /var/log/packages/qt6* 2>&-)" ] && { echo -e "\nDependência Faltante: qt6 !\n"; ERRO=1; }
[ "$ERRO" = 1 ] && exit 1

PRGNAM=obs-studio
VERSION=30.0.0
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/obsproject/obs-studio/archive/refs/tags/30.0.0.tar.gz

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c -O $PRGNAM-$VERSION.tar.gz $LINK
rm -rf $TMP
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION

git clone https://github.com/obsproject/obs-browser.git plugins/obs-browser
git clone https://github.com/obsproject/obs-websocket.git plugins/obs-websocket

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

mkdir -p build; cd build
cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib${LIBDIRSUFFIX} \
    -DOBS_MULTIARCH_SUFFIX=${LIBDIRSUFFIX} \
    -DENABLE_NEW_MPEGTS_OUTPUT=OFF \
    -DBUILD_BROWSER=OFF \
    -DENABLE_WEBSOCKET=OFF \
    -DENABLE_WEBRTC=OFF \
    -DSTATIC_MBEDTLS=OFF \
    -DWITH_RTMPS=ON \
    -DUNIX_STRUCTURE=ON \
    -DENABLE_AJA=OFF \
    -DENABLE_JACK=ON \
    -DENABLE_LIBFDK=ON \
    -DENABLE_SCRIPTING_LUA=OFF \
    -DENABLE_VLC=ON \
    -DENABLE_VST=ON ..
make $NUMJOBS; make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

echo "          |-----handy-ruler------------------------------------------------------|
obs-studio: obs-studio (software for video recording and live streaming)
obs-studio:
obs-studio: OBS-studio is software for video recording and live streaming.
obs-studio: It allows to create scenes made up of multiple sources including
obs-studio: window captures, images, text, browser windows, webcams,
obs-studio: capture cards and more.
obs-studio: The interface makes it easy to transition between scenes and has
obs-studio: a powerful audio mixer with per-stream filters.
obs-studio: OBS supports all major streaming platforms.
obs-studio:
obs-studio: See also: https://obsproject.com/" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
