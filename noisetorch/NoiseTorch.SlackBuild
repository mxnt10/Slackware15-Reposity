#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ "`uname -m`" != x86_64 ] && { echo -e "\n Not Support !\n"; exit 1; }

PRGNAM=NoiseTorch
VERSION=0.12.2
ARCH=x86_64
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/noisetorch/NoiseTorch/releases/download/v0.12.2/NoiseTorch_x64_v0.12.2.tgz

set -e
wget -c $LINK
rm -rf $TMP
mkdir -p $PKG/{install,usr}
cd $TMP; tar xvf $CWD/$PRGNAM*$VERSION.tgz
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

mv .local/* $PKG/usr

echo "          |-----handy-ruler------------------------------------------------------|
NoiseTorch: NoiseTorch (Real-time microphone noise suppression on Linux)
NoiseTorch:
NoiseTorch: NoiseTorch-ng is an easy to use open source application for Linux
NoiseTorch: with PulseAudio or PipeWire. It creates a virtual microphone that
NoiseTorch: suppresses noise in any application using RNNoise.
NoiseTorch:
NoiseTorch: Use whichever conferencing or VOIP application you like and simply
NoiseTorch: select the filtered Virtual Microphone as input to torch the sound
NoiseTorch: of your mechanical keyboard, computer fans, trains and the likes.
NoiseTorch:
NoiseTorch: https://github.com/noisetorch/NoiseTorch" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote jรก pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
