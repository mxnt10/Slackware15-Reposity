#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }

PRGNAM=allegro4
SRCNAM=allegro
VERSION=4.4.2
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) export ARCH=i586 ;;
	arm*) export ARCH=arm ;;
	   *) export ARCH=$( uname -m ) ;;
esac

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK1=https://github.com/liballeg/allegro5/releases/download/4.4.2/allegro-4.4.2.tar.gz
LINK2=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.0.3-cfg.patch
LINK3=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.0.3-libdir.patch
LINK4=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.2-buildsys-fix.patch
LINK5=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.2-compat-fix-aliases.patch
LINK6=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.2-keybgrab-fix.patch
LINK7=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.2-mutex-fix.patch
LINK8=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.2-no-xsync-from-thread.patch
LINK9=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.3-datafile-double-free.patch
LINK10=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro-4.4.3-texinfo-non-utf8-input-fix.patch
LINK11=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/allegro4/allegro_GLX_RGBA_FLOAT_BIT_fix.patch

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK1 $LINK2 $LINK3 $LINK4 $LINK5 $LINK6 $LINK7 $LINK8 $LINK9 $LINK10 $LINK11
rm -rf $PKG $TMP/$SRCNAM-$VERSION
mkdir -p $PKG/{install,etc,usr/share/allegro}
cd $TMP; tar xvf $CWD/$SRCNAM-$VERSION.tar.gz
cd $SRCNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

patch -p1 < $CWD/allegro-4.0.3-cfg.patch
patch -p1 < $CWD/allegro-4.0.3-libdir.patch
patch -p1 < $CWD/allegro-4.4.2-buildsys-fix.patch
patch -p1 < $CWD/allegro-4.4.2-compat-fix-aliases.patch
patch -p1 < $CWD/allegro-4.4.2-keybgrab-fix.patch
patch -p1 < $CWD/allegro-4.4.2-mutex-fix.patch
patch -p1 < $CWD/allegro-4.4.2-no-xsync-from-thread.patch
patch -p1 < $CWD/allegro-4.4.3-datafile-double-free.patch
patch -p1 < $CWD/allegro-4.4.3-texinfo-non-utf8-input-fix.patch
patch -p1 < $CWD/allegro_GLX_RGBA_FLOAT_BIT_fix.patch

cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DCMAKE_BUILD_TYPE=Release .
make VERBOSE=1; make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
cp language.dat keyboard.dat $PKG/usr/share/allegro
cp allegro.cfg $PKG/etc/allegro.cfg.new
gzip -9 $PKG/usr/info/*.info*

if [ -e /usr/share/sounds/eawpats/default.cfg ]; then
  LD_LIBRARY_PATH=$PKG/usr/lib$LIBDIRSUFFIX $PKG/usr/bin/pat2dat /usr/share/sounds/eawpats/default.cfg $PKG/usr/share/$SRCNAM/patches.dat
fi

echo 'allegro4: allegro4 (game programming library)
allegro4:
allegro4: The Allegro library provides C/C++ programmers low level routines
allegro4: commonly needed in game programing, such as input, graphics, midi,
allegro4: sound effects, and timing.
allegro4:
allegro4: http://www.allegro.cc/
allegro4:
allegro4:
allegro4:
allegro4:' > $PKG/install/slack-desc

echo 'config() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  if [ ! -r $OLD ]; then
    mv $NEW $OLD
  elif [ "$(cat $OLD | md5sum)" = "$(cat $NEW | md5sum)" ]; then
    # toss the redundant copy
    rm $NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}

config etc/allegro.cfg.new' > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$SRCNAM-$VERSION

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote j√° pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
