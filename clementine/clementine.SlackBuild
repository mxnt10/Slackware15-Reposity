#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ "`uname -m`" != x86_64 ] && { echo -e "\n Not Support !\n"; exit 1; }
[ ! "$(ls /var/log/packages/chromaprint*      2>&-)" ] && { echo -e "\nDependência Faltante: chromaprint !     \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/protobuf3*        2>&-)" ] && { echo -e "\nDependência Faltante: protobuf3 !       \n"; ERRO=1; }
[ ! "$(ls /var/log/packages/gst-plugins-ugly* 2>&-)" ] && { echo -e "\nDependência Faltante: gst-plugins-ugly !\n"; ERRO=1; }
[ "$ERRO" = 1 ] && exit 1

PRGNAM=clementine
SRCNAM=Clementine
VERSION=1.4.0rc2
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK=https://github.com/clementine-player/Clementine/archive/refs/tags/1.4.0rc2/Clementine-1.4.0rc2.tar.gz

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c $LINK
rm -rf $TMP
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; tar xvf $CWD/$SRCNAM-$VERSION.tar.?z*
cd $SRCNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

mkdir build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    ..
  make $NUMJOBS; make install DESTDIR=$PKG
cd ..

for i in 16 32; do
  install -m 0644 -D dist/${PRGNAM}_${i}.png \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/application-x-clementine.png
done

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
cp -a COPYING Changelog README.md $PKG/usr/doc/$PRGNAM-$VERSION/

echo "          |-----handy-ruler------------------------------------------------------|
clementine: clementine (music player based on Amarok 1.4)
clementine:
clementine: Clementine is a modern music player and library organiser. Clementine
clementine: is a port of Amarok 1.4, with some features rewritten to take
clementine: advantage of Qt.
clementine:
clementine: https://www.clementine-player.org/
clementine:
clementine:
clementine:
clementine:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
