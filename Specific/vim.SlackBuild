#!/bin/sh

# Slackware build script for vim

# Copyright 2022 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }

PRGNAM=vim
VERSION=8.2.4256
VIMBRANCH=8.2
CTAGSVER=5.8
BUILD=${BUILD:-1}
TAG-${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) export ARCH=i586 ;;
	arm*) export ARCH=arm ;;
	   *) export ARCH=$( uname -m ) ;;
esac

mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM 

CWD=$PWD
TMP=/tmp
PKG=$TMP/package-$PRGNAM
LINK1=https://github.com/vim/vim/archive/refs/tags/v8.2.4256.tar.gz
LINK2=https://mirrors.slackware.com/slackware/slackware64-current/source/ap/vim/ctags-5.8.tar.xz
LINK3=https://mirrors.slackware.com/slackware/slackware64-current/source/ap/vim/vim.vimrc.diff.gz

[ "$ARCH" = "x86_64" ] && RUBYDYNAMIC="=dynamic"
NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
PYVER=$(python -V 2>&1 | cut -f 2 -d' ' | cut -f 1-2 -d.)

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

export SLKLDFLAGS="-L/usr/lib${LIBDIRSUFFIX}"

set -e
[ ! -e "$PRGNAM-$VERSION.tar.gz" ] && wget -c -O $PRGNAM-$VERSION.tar.gz $LINK1
wget -c $LINK2 $LINK3 
rm -rf $PKG $TMP/$PRGNAM-$VERSION $TMP/ctags-$CTAGSVER
mkdir -p $PKG/{install,usr/{bin,man/man1,doc/{ctags-$CTAGSVER,$PRGNAM-$VERSION}}}

cd $TMP; tar xvf $CWD/ctags-$CTAGSVER.tar.?z
cd ctags-$CTAGSVER
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

CFLAGS="$SLKCFLAGS" LDFLAGS="$SLKLDFLAGS" \
./configure \
  --prefix=/usr \
  --build=$ARCH-slackware-linux
make $NUMJOBS || make

cat ctags > $PKG/usr/bin/ctags
chmod 755 $PKG/usr/bin/ctags
cat ctags.1 | gzip -9c > $PKG/usr/man/man1/ctags.1.gz
cp -a COPYING* EXTENDING.html FAQ INSTALL INSTALL.oth NEWS README* $PKG/usr/doc/ctags-$CTAGSVER
chmod 644 $PKG/usr/doc/ctags-$CTAGSVER/*

config_vim() {
CFLAGS="$SLKCFLAGS" \
./configure \
  $* \
  --prefix=/usr \
  --with-python-config-dir=/usr/lib${LIBDIRSUFFIX}/python$PYVER/config \
  --with-python3-config-dir=$(python3-config --configdir) \
  --enable-perlinterp=dynamic \
  --enable-pythoninterp=dynamic \
  --enable-python3interp=dynamic \
  --enable-rubyinterp${RUBYDYNAMIC} \
  --enable-tclinterp=dynamic \
  --enable-autoservername \
  --enable-canberra \
  --enable-luainterp \
  --enable-multibyte \
  --enable-cscope \
  --enable-fontset \
  --enable-largefile \
  --enable-xim \
  --with-features=huge \
  --with-compiledby="<m10ferrari1200@gmail.com>" \
  --build=$ARCH-slackware-linux
}

cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

config_vim --with-x
make $NUMJOBS || make
make install DESTDIR=$PKG

rsync -lprvt $PKG/usr/share/man/ $PKG/usr/man/
rm -r $PKG/usr/share/man
zcat $CWD/vim.vimrc.diff.gz | patch -p1 --verbose
cp -a runtime/vimrc_example.vim runtime/vimrc.new
cat runtime/vimrc.new > $PKG/usr/share/vim/vimrc.new
rm -rf $PKG/usr/share/applications

( cd $PKG/usr/bin ; rm -rf rview )
( cd $PKG/usr/bin ; ln -sf vim rview )
( cd $PKG/usr/bin ; rm -rf rvim )
( cd $PKG/usr/bin ; ln -sf vim rvim )
( cd $PKG/usr/bin ; rm -rf view )
( cd $PKG/usr/bin ; ln -sf vim view )
( cd $PKG/usr/bin ; rm -rf eview )
( cd $PKG/usr/bin ; ln -sf vim eview )
( cd $PKG/usr/bin ; rm -rf evim )
( cd $PKG/usr/bin ; ln -sf vim evim )
rm -f $PKG/usr/bin/{ex,vi}

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
cp -a README.txt $PKG/usr/doc/vim-$VERSION
find $PKG/usr/doc/vim-$VERSION -type f | xargs chmod 644
( cd $PKG/usr/doc/vim-$VERSION ; rm -rf doc )
( cd $PKG/usr/doc/vim-$VERSION ; ln -sf /usr/share/vim/vim$(echo $VIMBRANCH | tr -d .) doc )

echo "   |-----handy-ruler------------------------------------------------------|
vim: vim (Vi IMproved)
vim:
vim: Vim is an almost compatible version of the UNIX editor vi. Many new
vim: features have been added: multi level undo, command line history, 
vim: filename completion, block operations, and more.
vim:
vim: Vim's development is led by Bram Moolenaar.
vim:
vim: This package also contains the Exuberant Ctags program
vim: written by Darren Hiebert.
vim:" > $PKG/install/slack-desc

echo "#!/bin/bash
config() {
  NEW=\"\$1\"
  OLD=\"\$(dirname \$NEW)/\$(basename \$NEW .new)\"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ \"\$(cat \$OLD | md5sum)\" = \"\$(cat \$NEW | md5sum)\" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
config usr/share/vim/vimrc.new" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $PKG $TMP/$PRGNAM-$VERSION $TMP/ctags-$CTAGSVER

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote j√° pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
