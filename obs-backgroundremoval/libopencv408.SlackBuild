#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }

PRGNAM=libopencv408
SRCNAM=opencv
VERSION=4.8.1
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK1=https://github.com/opencv/opencv/archive/refs/tags/4.8.1.tar.gz
LINK2=https://github.com/opencv/opencv_contrib/archive/refs/tags/4.8.1.tar.gz

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
    SLKCFLAGS="-O3 -march=armv7-a -mfpu=vfpv3-d16"
    LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c -O $SRCNAM-$VERSION.tar.gz $LINK1
wget -c -O ${SRCNAM}_contrib-${VERSION}.tar.gz $LINK2
rm -rf $TMP
mkdir -p $PKG/{install,usr/doc/$PRGNAM-$VERSION}
cd $TMP; tar xvf $CWD/$SRCNAM-$VERSION.tar.?z*
cd $SRCNAM-$VERSION

tar xvf $CWD/${SRCNAM}_contrib-${VERSION}.tar.?z

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

mkdir cmake-build
cd cmake-build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE="Release" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DINSTALL_MAN_DIR=man \
    -DINSTALL_DOC_DIR=doc/$PRGNAM-$VERSION \
    -DSYSCONF_INSTALL_DIR=/etc \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DLIB_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX} \
    -DBUILD_CUDA_STUBS=OFF \
    -DBUILD_PACKAGE=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_TESTS=OFF \
    -DBUILD_WITH_DEBUG_INFO=OFF \
    -DENABLE_PRECOMPILED_HEADERS=OFF \
    -DWITH_CUDA=OFF \
    -DWITH_FFMPEG=ON \
    -DWITH_GDAL=OFF \
    -DWITH_IPP=OFF \
    -DWITH_OPENGL=ON \
    -DWITH_OPENMP=ON \
    -DWITH_QT=ON \
    -DWITH_XINE=ON \
    -DOPENCV_ENABLE_NONFREE=ON \
    -DOPENCV_EXTRA_MODULES_PATH=../${SRCNAM}_contrib-$VERSION/modules \
    -DOPENCV_GENERATE_PKGCONFIG=ON \
    -DOPENCV_JNI_INSTALL_PATH=lib${LIBDIRSUFFIX} \
    .. || exit 1
  make $NUMJOBS || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

cp -a README* $PKG/usr/doc/$PRGNAM-$VERSION
mv $PKG/usr/share/licenses $PKG/usr/doc/$PRGNAM-$VERSION

rm -r $PKG/usr/share
rm -r $PKG/usr/bin
mv $PKG/usr/include/opencv4 $PKG/usr/include/opencv408
mv $PKG/usr/lib${LIBDIRSUFFIX}/cmake/opencv4 $PKG/usr/lib${LIBDIRSUFFIX}/cmake/opencv408
mv $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/opencv4.pc $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/opencv408.pc

echo "            |-----handy-ruler------------------------------------------------------|
libopencv408: libopencv408 (Open Source Computer Vision v4.8.1)
libopencv408:
libopencv408: OpenCV is a collection of algorithms and sample code for various
libopencv408: computer vision problems.
libopencv408:
libopencv408: Homepage: http://opencv.willowgarage.com
libopencv408:
libopencv408:
libopencv408:
libopencv408:
libopencv408:" > $PKG/install/slack-desc

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote jรก pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
