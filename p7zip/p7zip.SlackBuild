#!/bin/sh

# Copyright 2023 Mauricio Ferrari <m10ferrari1200@gmail.com>
# All rights reserved.

[ $UID != 0 ] && { echo -e "\nExecute como Root !\n"; exit 1; }
[ ! "$(ls /var/log/packages/wxGTK3* 2>&-)" ] && { echo -e "\nDependência Faltante: wxGTK3 !\n"; exit 1; }

PRGNAM=p7zip
VERSION=17.05
BUILD=${BUILD:-1}
TAG=${TAG:-_mxnt}

case "$( uname -m )" in
	i?86) export ARCH=i586 ;;
	arm*) export ARCH=arm ;;
	   *) export ARCH=$( uname -m ) ;;
esac

[ -e "../../_PKGS" ] && { mkdir -p ../../_PKGS/$PRGNAM; chown -R 1000:users ../../_PKGS; cd ../../_PKGS/$PRGNAM; } || {
    mkdir -p PKGS/$PRGNAM; chown -R 1000:users PKGS; cd PKGS/$PRGNAM
}

CWD=$PWD
TMP=/var/tmp/MXNT
PKG=$TMP/package-$PRGNAM
LINK1=https://github.com/p7zip-project/p7zip/archive/refs/tags/v17.05.tar.gz
LINK2=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/p7zip/fix_ambiguous1.patch
LINK3=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/p7zip/fix_ambiguous2.patch
LINK4=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/p7zip/fix_ambiguous3.patch
LINK5=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/p7zip/fix_ambiguous4.patch
LINK6=https://raw.githubusercontent.com/mxnt10/Slackware15-Reposity/master/_patchs/p7zip/fix_kZSTD.patch

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX="64"
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e
wget -c -O $PRGNAM-$VERSION.tar.gz $LINK1
wget -c $LINK2 $LINK3 $LINK4 $LINK5 $LINK6
rm -rf $TMP
mkdir -p $TMP $PKG/{install,usr/{doc/$PRGNAM-$VERSION,share/{applications,kservices5/ServiceMenus/,mc/extfs/,pixmaps}}}
cd $TMP; tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

patch -p1 -i $CWD/fix_kZSTD.patch
patch -p1 -i $CWD/fix_ambiguous1.patch
patch -p1 -i $CWD/fix_ambiguous2.patch
patch -p1 -i $CWD/fix_ambiguous3.patch
patch -p1 -i $CWD/fix_ambiguous4.patch
NUMJOBS=${NUMJOBS:-" -j$(nproc) "}

sed -i "s|/usr/lib/|/usr/lib$LIBDIRSUFFIX/|g" CPP/7zip/UI/GUI/makefile.depend
make all3 7zG 7zFM \
  OPTFLAGS="$SLKCFLAGS" \
  DEST_HOME=/usr \
  DEST_SHARE_DOC=/usr/doc/$PRGNAM-$VERSION \
  DEST_SHARE=/usr/lib$LIBDIRSUFFIX/p7zip \
  DEST_DIR=$PKG $NUMJOBS

make install \
  OPTFLAGS="$SLKCFLAGS" \
  DEST_HOME=/usr \
  DEST_SHARE_DOC=/usr/doc/$PRGNAM-$VERSION \
  DEST_SHARE=/usr/lib$LIBDIRSUFFIX/p7zip \
  DEST_DIR=$PKG $NUMJOBS

install -m 0755 contrib/gzip-like_CLI_wrapper_for_7z/p7zip $PKG/usr/bin/
install -m 0644 contrib/gzip-like_CLI_wrapper_for_7z/man1/p7zip.1 $PKG/usr/man/man1/
install -m 755 contrib/VirtualFileSystemForMidnightCommander/u7z $PKG/usr/share/mc/extfs/

install -m 555 $PKG/usr/bin/7z $PKG/usr/bin/7zG
sed -i "s|/usr/lib$LIBDIRSUFFIX/p7zip/7z|/usr/lib$LIBDIRSUFFIX/p7zip/7zG|" $PKG/usr/bin/7zG
install -m 555 $PKG/usr/bin/7z $PKG/usr/bin/7zFM
sed -i "s|/usr/lib$LIBDIRSUFFIX/p7zip/7z|/usr/lib$LIBDIRSUFFIX/p7zip/7zFM|" $PKG/usr/bin/7zFM

install -m 555 bin/7zG $PKG/usr/lib$LIBDIRSUFFIX/p7zip/7zG
install -m 555 bin/7zFM_do_not_use $PKG/usr/lib$LIBDIRSUFFIX/p7zip/7zFM
cp -r GUI/Lang $PKG/usr/lib$LIBDIRSUFFIX/p7zip/Lang
find $PKG/usr/lib$LIBDIRSUFFIX/p7zip/Lang -type d -exec chmod 555 {} \;
find $PKG/usr/lib$LIBDIRSUFFIX/p7zip/Lang -type f -exec chmod 444 {} \;
install -m 555 GUI/p7zipForFilemanager  $PKG/usr/bin/p7zipForFilemanager
install -m 444 -D GUI/p7zip_32.png $PKG/usr/share/icons/hicolor/32x32/apps/p7zip.png
cp GUI/kde4/*.desktop $PKG/usr/share/kservices5/ServiceMenus/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
cp TODO $PKG/usr/doc/$PRGNAM-$VERSION
cp contrib/gzip-like_CLI_wrapper_for_7z/README $PKG/usr/doc/$PRGNAM-$VERSION/README.p7zip

echo "[Desktop Entry]
Name=7-Zip FM
GenericName=7-Zip File Manager
Type=Application
Categories=GTK;Utility;Archiving;Compression;
Terminal=false
Icon=p7zip
Exec=7zFM
MimeType=application/gzip;application/x-7z-compressed;application/x-7z-compressed-tar;application/x-arj;application/x-bzip;application/x-bzip-compressed-tar;application/x-bzip1;application/x-bzip1-compressed-tar;application/x-cabinet;application/x-cd-image;application/x-compress;application/x-compressed-tar;application/x-cpio;application/x-deb;application/x-gtar;application/x-gzip;application/x-gzpostscript;application/x-lha;application/x-lhz;application/x-lzma;application/x-lzma-compressed-tar;application/x-ms-wim;application/x-rar;application/x-rar-compressed;application/x-rpm;application/x-tar;application/x-xz;application/x-xz-compressed-tar;application/x-zip;application/x-zip-compressed;application/zip;application/vnd.ms-cab-compressed;" > $PKG/usr/share/applications/7zFM.desktop

echo "     |-----handy-ruler------------------------------------------------------|
p7zip: p7zip (File Compression/Decompression Utility)
p7zip:
p7zip: 7-Zip is a well-known file compression utility for windows.
p7zip: p7zip is a ported version for linux with nearly the same capabilities.
p7zip:
p7zip: Homepage: http://p7zip.sourceforge.net/
p7zip:
p7zip:
p7zip:
p7zip:
p7zip:" > $PKG/install/slack-desc

echo "if [ -x /usr/bin/update-desktop-database ]; then
	/usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
	/usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		/usr/bin/gtk-update-icon-cache usr/share/icons/hicolor >/dev/null 2>&1
	fi
fi

if [ -e usr/share/glib-2.0/schemas ]; then
	if [ -x /usr/bin/glib-compile-schemas ]; then
		/usr/bin/glib-compile-schemas usr/share/glib-2.0/schemas >/dev/null 2>&1
	fi
fi" > $PKG/install/doinst.sh

cd $PKG; /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
chown -R 1000:users $CWD/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
rm -rf $TMP

cd $CWD
[ ${TIME:-0} != 0 ] && TIME="-t $TIME" || TIME=
if [ "${INST:-no}" = "yes" ]; then
	OPTION=y
else
	read $TIME -p "O pacote já pode ser instalado? (y/n) (default=n)" OPTION
fi
case "$OPTION" in
	y|Y) /sbin/upgradepkg --install-new --reinstall $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ;;
esac; exit 0
